{"version":3,"sources":["UI/App/App.module.css","UI/Button/Button.module.css","media/logo.svg","UI/Card/Card.tsx","UI/Button/Button.tsx","BLL/actions.ts","UI/App/App.tsx","serviceWorker.ts","DAL/setGame-reducer.ts","DAL/store.ts","index.tsx","UI/Card/Card.module.css"],"names":["module","exports","Card","props","id","className","styles","card","active","opacity","style","color","onClick","clickHandler","data-value","value","src","logo","alt","Button","React","memo","container","button","title","ACTIVE_GAME","LEVEL_UP","SET_ACTIVE_CLASS","GUESSED_CARDS","App","dispatch","useDispatch","useSelector","state","cardsReducer","cards","cardsClass","activeCard","useState","activeGame","setActiveGame","e","idFirst","currentTarget","dataset","type","idNext","classActive","console","log","cardsJSX","map","el","i","key","background","activeClass","setNextLevel","useCallback","levelUpAC","Boolean","window","location","hostname","match","initialState","reducers","combineReducers","action","sort","Math","random","w","store","createStore","compose","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.109a4abc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3b5w5\",\"cardsSixteen\":\"App_cardsSixteen__3Ws1H\",\"levelUp\":\"App_levelUp__18e1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3WO5N\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport logo from './../../media/logo.svg';\r\nimport styles from './Card.module.css';\r\n\r\nconst Card = (props: any) => {\r\n\treturn (\r\n\t\t<div \r\n\t\tid={props.id} \r\n\t\tclassName={`${styles.card} ${styles[props.active]} ${styles[props.opacity]}`} \r\n\t\tstyle={props.color} \r\n\t\tonClick={props.clickHandler} \r\n\t\tdata-value={props.value}\r\n\t\t>\r\n\t\t\t<img src={logo} className={styles.logo} alt=\"logo\" />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = React.memo((props: any) => {\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<button className={styles.button} onClick={props.onClick}>{props.title}</button>\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nexport default Button;","export const ACTIVE_GAME = 'setGame-reducer/ACTIVE_GAME';\r\nexport const LEVEL_UP = 'setGame-reducer/LEVEL_UP';\r\nexport const SET_ACTIVE_CLASS = 'setGame-reducer/SET_ACTIVE_CLASS';\r\nexport const GUESSED_CARDS = 'setGame-reducer/GUESSED_CARDS';\r\n\r\ntype ActiveGameACType = {\r\n\ttype: typeof ACTIVE_GAME;\r\n};\r\n\r\nexport const activeGameAC = (): ActiveGameACType => ({ type: ACTIVE_GAME });\r\n\r\ntype LevelUpACType = {\r\n\ttype: typeof LEVEL_UP;\r\n\tcardsClass: string;\r\n};\r\n\r\nexport const levelUpAC = (cardsClass: string): LevelUpACType => ({ type: LEVEL_UP, cardsClass });\r\n\r\ntype SetActiveClassACType = {\r\n\ttype: typeof SET_ACTIVE_CLASS;\r\n\tclassActive: string;\r\n\tcolor: string;\r\n};\r\n\r\nexport const setActiveClassAC = (classActive: string, color: string): SetActiveClassACType => ({\r\n\ttype: SET_ACTIVE_CLASS,\r\n\tclassActive,\r\n\tcolor\r\n});\r\n\r\ntype GuessedCardsACType = {\r\n\ttype: typeof GUESSED_CARDS;\r\n\tidFirst: string;\r\n\tidNext: string;\r\n};\r\n\r\nexport const guessedCardsAC = (idFirst: string, idNext: string): GuessedCardsACType => ({\r\n\ttype: GUESSED_CARDS,\r\n\tidFirst,\r\n\tidNext\r\n});\r\n\r\nexport type ActionsType = LevelUpACType |\r\n\tActiveGameACType |\r\n\tSetActiveClassACType |\r\n\tGuessedCardsACType;","import React, { useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppStateType } from '../../DAL/store';\nimport Card from '../Card/Card';\nimport styles from './App.module.css';\nimport Button from '../Button/Button';\nimport { levelUpAC, setActiveClassAC, guessedCardsAC } from '../../BLL/actions';\nimport { activeGameAC } from './../../BLL/actions';\n\nconst App = () => {\n\n\tconst dispatch = useDispatch();\n\tconst { cards, cardsClass, activeCard } = useSelector((state: AppStateType) => state.cardsReducer);\n\tconst [activeGame, setActiveGame] = useState(false);\n\n\tconst clickHandler = (e: any) => {\n\t\tconst id = e.currentTarget.id;\n\t\tconst value = e.currentTarget.dataset.value;\n\t\tif (activeCard.color === value) {\n\t\t\tdispatch(guessedCardsAC(activeCard.id, id));\n\t\t} else {\n\t\t\tdispatch(setActiveClassAC(id, value));\n\t\t}\n\t\tconsole.log(value);\n\t};\n\n\tconst cardsJSX = cards.map((el, i) => {\n\n\t\treturn (\n\t\t\t<Card\n\t\t\t\tkey={i}\n\t\t\t\tid={i}\n\t\t\t\tcolor={{ background: el.color }}\n\t\t\t\tclickHandler={clickHandler}\n\t\t\t\tvalue={el.color}\n\t\t\t\tactive={el.activeClass}\n\t\t\t\topacity={el.opacity}\n\t\t\t/>\n\t\t);\n\t});\n\n\tconst setNextLevel = useCallback(() => dispatch(levelUpAC('levelUp')), [dispatch]);\n\n\treturn (\n\t\t<div className={styles.App}>\n\t\t\t{activeGame &&\n\t\t\t\t<div className={styles[cardsClass]}>\n\t\t\t\t\t{cardsJSX}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{!activeGame && <Button title=\"active game\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetActiveGame(true);\n\t\t\t\t\tdispatch(activeGameAC());\n\t\t\t\t}\n\t\t\t\t} />}\n\t\t\t{activeGame && <Button title=\"next level\" onClick={setNextLevel} />}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { LEVEL_UP, ACTIVE_GAME, SET_ACTIVE_CLASS, GUESSED_CARDS, ActionsType } from \"../BLL/actions\";\r\n\r\n\r\n\r\nconst initialState = {\r\n\tcardsClass: 'cardsSixteen',\r\n\tcards: [\r\n\t\t{ color: 'green', activeClass: '', opacity: '' },\r\n\t\t{ color: 'green', activeClass: '', opacity: '' },\r\n\t\t{ color: 'yellow', activeClass: '', opacity: '' },\r\n\t\t{ color: 'yellow', activeClass: '', opacity: '' },\r\n\t\t{ color: 'gray', activeClass: '', opacity: '' },\r\n\t\t{ color: 'gray', activeClass: '', opacity: '' },\r\n\t\t{ color: 'red', activeClass: '', opacity: '' },\r\n\t\t{ color: 'red', activeClass: '', opacity: '' },\r\n\t\t{ color: 'purple', activeClass: '', opacity: '' },\r\n\t\t{ color: 'purple', activeClass: '', opacity: '' },\r\n\t\t{ color: 'black', activeClass: '', opacity: '' },\r\n\t\t{ color: 'black', activeClass: '', opacity: '' },\r\n\t\t{ color: 'aqua', activeClass: '', opacity: '' },\r\n\t\t{ color: 'aqua', activeClass: '', opacity: '' },\r\n\t\t{ color: 'pink', activeClass: '', opacity: '' },\r\n\t\t{ color: 'pink', activeClass: '', opacity: '' }\r\n\t],\r\n\tactiveCard: { id: '', color: '' }\r\n};\r\n\r\nexport const cardsReducer = (state = initialState, action: ActionsType) => {\r\n\tswitch (action.type) {\r\n\t\tcase ACTIVE_GAME:\r\n\t\t\treturn {\r\n\t\t\t\t...state, cards: state.cards.sort(() => Math.random() - 0.5)\r\n\t\t\t}\r\n\t\tcase SET_ACTIVE_CLASS:\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcards: state.cards.map((el, i) => i === +action.classActive ?\r\n\t\t\t\t\t{ color: el.color, activeClass: 'active', opacity: '' } :\r\n\t\t\t\t\tel),\r\n\t\t\t\tactiveCard: { id: action.classActive, color: action.color }\r\n\t\t\t}\r\n\t\tcase GUESSED_CARDS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcards: state.cards.map((el, i) => i === +action.idFirst || i === +action.idNext ?\r\n\t\t\t\t\t{ color: el.color, activeClass: 'active', opacity: 'disabled' } :\r\n\t\t\t\t\tel)\r\n\t\t\t}\r\n\t\tcase LEVEL_UP:\r\n\t\t\tstate.cards.sort(() => Math.random() - 0.5);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcards: [\r\n\t\t\t\t\t...state.cards.map(el => ({ color: el.color, activeClass: '', opacity: '' })),\r\n\t\t\t\t\t...state.cards.map(el => ({ color: el.color, activeClass: '', opacity: '' }))\r\n\t\t\t\t], cardsClass: action.cardsClass\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t};\r\n};","import { combineReducers,createStore, compose } from 'redux';\r\nimport { cardsReducer } from './setGame-reducer';\r\n\r\nconst reducers = combineReducers({\r\n\tcardsReducer\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof reducers>;\r\n\r\nconst w : any = window as any;\r\n\r\nconst store = createStore(reducers, compose(w.__REDUX_DEVTOOLS_EXTENSION__ && w.__REDUX_DEVTOOLS_EXTENSION__()));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './UI/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './DAL/store';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3FQZf\",\"logo\":\"Card_logo__2yubE\",\"active\":\"Card_active__2JW4j\",\"disabled\":\"Card_disabled__x0N1U\"};"],"sourceRoot":""}