{"version":3,"sources":["UI/App/App.module.css","UI/Button/Button.module.css","media/logo.svg","UI/Card/Card.module.css","UI/Card/Card.tsx","UI/Button/Button.tsx","BLL/actions.ts","UI/App/App.tsx","serviceWorker.ts","DAL/setGame-reducer.ts","DAL/store.ts","index.tsx"],"names":["module","exports","Card","React","memo","props","className","styles","container","id","card","active","opacity","style","color","onClick","clickCard","data-value","value","src","logo","alt","Button","button","title","ACTIVE_GAME","LEVEL_UP","SET_ACTIVE_CLASS","GUESSED_CARDS","RESET_CARDS","RESET_LEVEL","activeGameAC","type","setActiveClassAC","classActive","App","dispatch","useDispatch","useSelector","state","cardsReducer","cards","cardsClass","activeCard","useState","activeGame","setActiveGame","useCallback","e","idFirst","currentTarget","undefined","dataset","idNext","setTimeout","resetCardsAC","activeGameButton","nextLevelButton","levelUpAC","resetLevelButton","cardsJSX","map","el","i","key","background","activeClass","Boolean","window","location","hostname","match","initialState","reducers","combineReducers","action","sort","Math","random","resetActive","w","store","createStore","compose","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fb1d1dae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3b5w5\",\"cardsSixteen\":\"App_cardsSixteen__3Ws1H\",\"levelUp\":\"App_levelUp__18e1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3WO5N\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__1hzTl\",\"card\":\"Card_card__3FQZf\",\"logo\":\"Card_logo__2yubE\",\"active\":\"Card_active__2JW4j\",\"disabled\":\"Card_disabled__x0N1U\"};","import React from 'react';\r\nimport logo from './../../media/logo.svg';\r\nimport styles from './Card.module.css';\r\n\r\nconst Card = React.memo((props: any) => {\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<div\r\n\t\t\t\tid={props.id}\r\n\t\t\t\tclassName={`${styles.card} ${styles[props.active]} ${styles[props.opacity]}`}\r\n\t\t\t\tstyle={props.color}\r\n\t\t\t\tonClick={props.clickCard}\r\n\t\t\t\tdata-value={props.value}\r\n\t\t\t>\r\n\t\t\t\t<img src={logo} className={styles.logo} alt=\"logo\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nexport default Card;","import React from 'react';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = React.memo((props: any) => {\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<button className={styles.button} onClick={props.onClick}>{props.title}</button>\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nexport default Button;","export const ACTIVE_GAME = 'setGame-reducer/ACTIVE_GAME';\r\nexport const LEVEL_UP = 'setGame-reducer/LEVEL_UP';\r\nexport const SET_ACTIVE_CLASS = 'setGame-reducer/SET_ACTIVE_CLASS';\r\nexport const GUESSED_CARDS = 'setGame-reducer/GUESSED_CARDS';\r\nexport const RESET_CARDS = 'setGame-reducer/RESET_CARDS';\r\nexport const RESET_LEVEL = 'setGame-reducer/RESET_LEVEL';\r\nexport const SET_ALL_ACTIVE_CLASS = 'setGame-reducer/SET_ALL_ACTIVE_CLASS';\r\nexport const DISABLE_ALL_ACTIVE_CLASS = 'setGame-reducer/DISABLE_ALL_ACTIVE_CLASS';\r\n\r\n\r\ntype ActiveGameACType = {\r\n\ttype: typeof ACTIVE_GAME;\r\n};\r\nexport const activeGameAC = (): ActiveGameACType => ({ type: ACTIVE_GAME });\r\n\r\ntype LevelUpACType = {\r\n\ttype: typeof LEVEL_UP;\r\n\tcardsClass: string;\r\n};\r\nexport const levelUpAC = (cardsClass: string): LevelUpACType => ({ type: LEVEL_UP, cardsClass });\r\n\r\ntype SetActiveClassACType = {\r\n\ttype: typeof SET_ACTIVE_CLASS;\r\n\tclassActive: string;\r\n\tcolor: string;\r\n};\r\nexport const setActiveClassAC = (classActive: string, color: string): SetActiveClassACType => ({\r\n\ttype: SET_ACTIVE_CLASS,\r\n\tclassActive,\r\n\tcolor\r\n});\r\n\r\ntype GuessedCardsACType = {\r\n\ttype: typeof GUESSED_CARDS;\r\n\tidFirst: string;\r\n\tidNext: string;\r\n};\r\nexport const guessedCardsAC = (idFirst: string, idNext: string): GuessedCardsACType => ({\r\n\ttype: GUESSED_CARDS,\r\n\tidFirst,\r\n\tidNext\r\n});\r\n\r\ntype ResetCardsACType = {\r\n\ttype: typeof RESET_CARDS;\r\n\tidFirst: string;\r\n\tidNext: string;\r\n};\r\nexport const resetCardsAC = (idFirst: string, idNext: string): ResetCardsACType => ({\r\n\ttype: RESET_CARDS,\r\n\tidFirst,\r\n\tidNext\r\n});\r\n\r\ntype ResetLevelACtype = {\r\n\ttype: typeof RESET_LEVEL;\r\n};\r\nexport const resetLevelAC = (): ResetLevelACtype => ({ type: RESET_LEVEL });\r\n\r\ntype SetAllActiveClassACType = {\r\n\ttype: typeof SET_ALL_ACTIVE_CLASS;\r\n};\r\nexport const setAllActiveClassAC = (): SetAllActiveClassACType => ({ type: SET_ALL_ACTIVE_CLASS });\r\n\r\ntype DisableAllActiveClassACType = {\r\n\ttype: typeof DISABLE_ALL_ACTIVE_CLASS;\r\n};\r\nexport const DisableAllActiveClassAC = (): DisableAllActiveClassACType => ({ type: DISABLE_ALL_ACTIVE_CLASS });\r\n\r\n\r\nexport type ActionsType = LevelUpACType |\r\n\tActiveGameACType |\r\n\tSetActiveClassACType |\r\n\tGuessedCardsACType |\r\n\tResetCardsACType |\r\n\tResetLevelACtype |\r\n\tSetAllActiveClassACType |\r\n\tDisableAllActiveClassACType;","import React, { useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppStateType } from '../../DAL/store';\nimport Card from '../Card/Card';\nimport styles from './App.module.css';\nimport Button from '../Button/Button';\nimport { levelUpAC, setActiveClassAC, guessedCardsAC, resetCardsAC, resetLevelAC, setAllActiveClassAC, DisableAllActiveClassAC } from '../../BLL/actions';\nimport { activeGameAC } from './../../BLL/actions';\n\nconst App = () => {\n\n\tconst dispatch = useDispatch();\n\tconst { cards, cardsClass, activeCard } = useSelector((state: AppStateType) => state.cardsReducer);\n\tconst [activeGame, setActiveGame] = useState(false);\n\n\tconst clickCard = useCallback((e: React.FormEvent<HTMLInputElement>) => {\n\t\tconst id = e.currentTarget.id;\n\t\tconst value = e.currentTarget.dataset.value !== undefined ? e.currentTarget.dataset.value : '';\n\n\t\tif (activeCard.color !== '' && activeCard.color === value) {\n\t\t\tdispatch(guessedCardsAC(activeCard.id, id));\n\t\t} else if (activeCard.color !== '' && activeCard.color !== value) {\n\t\t\tdispatch(setActiveClassAC(id, value));\n\t\t\tsetTimeout(() => dispatch(resetCardsAC(activeCard.id, id)), 300);\n\t\t} else {\n\t\t\tdispatch(setActiveClassAC(id, value));\n\t\t}\n\t}, [cards, cardsClass, activeCard]);\n\n\tconst activeGameButton = useCallback(() => {\n\t\tsetActiveGame(true);\n\t\tdispatch(setAllActiveClassAC());\n\n\t\tsetTimeout(() => {\n\t\t\tdispatch(DisableAllActiveClassAC());\n\t\t\tdispatch(activeGameAC());\n\t\t}, 5000);\n\n\t}, [setActiveGame, dispatch]);\n\n\tconst nextLevelButton = useCallback(() => {\n\t\tdispatch(levelUpAC('levelUp'));\n\t\tdispatch(setAllActiveClassAC());\n\n\t\tsetTimeout(() => {\n\t\t\tdispatch(DisableAllActiveClassAC());\n\t\t\tdispatch(activeGameAC());\n\t\t}, 1000);\n\n\t}, [dispatch]);\n\n\tconst resetLevelButton = useCallback(() => dispatch(resetLevelAC()), [dispatch]);\n\n\tconst cardsJSX = cards.map((el, i) =>\n\t\t<Card\n\t\t\tkey={i}\n\t\t\tid={i}\n\t\t\tcolor={{ background: el.color }}\n\t\t\tclickCard={clickCard}\n\t\t\tvalue={el.color}\n\t\t\tactive={el.activeClass}\n\t\t\topacity={el.opacity}\n\t\t/>\n\t);\n\n\treturn (\n\t\t<div className={styles.App}>\n\t\t\t{activeGame &&\n\t\t\t\t<div className={styles[cardsClass]}>\n\t\t\t\t\t{cardsJSX}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{!activeGame &&\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"active game\"\n\t\t\t\t\tonClick={activeGameButton}\n\t\t\t\t/>\n\t\t\t}\n\t\t\t{activeGame &&\n\t\t\t\t<>\n\t\t\t\t\t<Button title=\"next level\" onClick={nextLevelButton} />\n\t\t\t\t\t<Button title=\"reset level\" onClick={resetLevelButton} />\n\t\t\t\t</>}\n\t\t</div>\n\t);\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n\tLEVEL_UP,\r\n\tACTIVE_GAME,\r\n\tSET_ACTIVE_CLASS,\r\n\tGUESSED_CARDS,\r\n\tActionsType,\r\n\tRESET_CARDS,\r\n\tRESET_LEVEL,\r\n\tSET_ALL_ACTIVE_CLASS,\r\n\tDISABLE_ALL_ACTIVE_CLASS\r\n} from \"../BLL/actions\";\r\n\r\n\r\nconst initialState = {\r\n\tcardsClass: 'cardsSixteen',\r\n\tcards: [\r\n\t\t{ color: 'green', activeClass: '', opacity: '' },\r\n\t\t{ color: 'green', activeClass: '', opacity: '' },\r\n\t\t{ color: 'yellow', activeClass: '', opacity: '' },\r\n\t\t{ color: 'yellow', activeClass: '', opacity: '' },\r\n\t\t{ color: 'gray', activeClass: '', opacity: '' },\r\n\t\t{ color: 'gray', activeClass: '', opacity: '' },\r\n\t\t{ color: 'red', activeClass: '', opacity: '' },\r\n\t\t{ color: 'red', activeClass: '', opacity: '' },\r\n\t\t{ color: 'purple', activeClass: '', opacity: '' },\r\n\t\t{ color: 'purple', activeClass: '', opacity: '' },\r\n\t\t{ color: 'black', activeClass: '', opacity: '' },\r\n\t\t{ color: 'black', activeClass: '', opacity: '' },\r\n\t\t{ color: 'aqua', activeClass: '', opacity: '' },\r\n\t\t{ color: 'aqua', activeClass: '', opacity: '' },\r\n\t\t{ color: 'pink', activeClass: '', opacity: '' },\r\n\t\t{ color: 'pink', activeClass: '', opacity: '' }\r\n\t],\r\n\tactiveCard: { id: '', color: '' }\r\n};\r\n\r\n\r\nexport const cardsReducer = (state = initialState, action: ActionsType) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase ACTIVE_GAME:\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\r\n\t\tcase SET_ACTIVE_CLASS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcards: state.cards.map((el, i) => i === +action.classActive ?\r\n\t\t\t\t\t{ color: el.color, activeClass: 'active', opacity: '' } :\r\n\t\t\t\t\tel),\r\n\t\t\t\tactiveCard: { id: action.classActive, color: action.color }\r\n\t\t\t};\r\n\r\n\t\tcase GUESSED_CARDS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcards: state.cards.map((el, i) => i === +action.idFirst || i === +action.idNext ?\r\n\t\t\t\t\t{ color: el.color, activeClass: 'active', opacity: 'disabled' } :\r\n\t\t\t\t\tel),\r\n\t\t\t\tactiveCard: { id: '', color: '' }\r\n\t\t\t};\r\n\r\n\t\tcase RESET_CARDS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcards: state.cards.map((el, i) => i === +action.idFirst || i === +action.idNext ?\r\n\t\t\t\t\t{ color: el.color, activeClass: '', opacity: '' } :\r\n\t\t\t\t\tel),\r\n\t\t\t\tactiveCard: { id: '', color: '' }\r\n\t\t\t};\r\n\r\n\t\tcase LEVEL_UP:\r\n\t\t\tstate.cards.sort(() => Math.random() - 0.5);\r\n\t\t\tconst resetActive = state.cards.map(el => ({ color: el.color, activeClass: '', opacity: '' }));\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcardsClass: action.cardsClass,\r\n\t\t\t\tcards: [\r\n\t\t\t\t\t...resetActive,\r\n\t\t\t\t\t...resetActive\r\n\t\t\t\t]\r\n\t\t\t};\r\n\r\n\t\tcase RESET_LEVEL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcards: state.cards.map(el => ({ color: el.color, activeClass: '', opacity: '' })),\r\n\t\t\t\tactiveCard: { id: '', color: '' }\r\n\t\t\t};\r\n\r\n\t\tcase SET_ALL_ACTIVE_CLASS:\r\n\t\t\tstate.cards.sort(() => Math.random() - 0.5);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcards: state.cards.map(el => ({ color: el.color, activeClass: 'active', opacity: '' }))\r\n\t\t\t};\r\n\r\n\t\tcase DISABLE_ALL_ACTIVE_CLASS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcards: state.cards.map(el => ({ color: el.color, activeClass: '', opacity: '' }))\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t};\r\n};","import { combineReducers,createStore, compose } from 'redux';\r\nimport { cardsReducer } from './setGame-reducer';\r\n\r\nconst reducers = combineReducers({\r\n\tcardsReducer\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof reducers>;\r\n\r\nconst w : any = window as any;\r\n\r\nconst store = createStore(reducers, compose(w.__REDUX_DEVTOOLS_EXTENSION__ && w.__REDUX_DEVTOOLS_EXTENSION__()));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './UI/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './DAL/store';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}